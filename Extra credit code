#include <iostream>
#include <vector>

std::vector<int> multiply(std::vector<int> &number, int multiplier) {
    int carry = 0;
    for (size_t i = 0; i < number.size(); ++i) {
        int product = number[i] * multiplier + carry;
        number[i] = product % 10; // Store the last digit
        carry = product / 10; // Carry the rest
    }
    while (carry) {
        number.push_back(carry % 10);
        carry /= 10;
    }
    return number;
}

int sumOfDigitsInFactorial(int n) {
    std::vector<int> factorial(1, 1); // Start with 1

    for (int i = 2; i <= n; ++i) {
        multiply(factorial, i);
    }

    int sum = 0;
    for (int digit : factorial) {
        sum += digit; // Sum the digits
    }
    return sum;
}

int main() {
    int number = 100;
    int result = sumOfDigitsInFactorial(number);
    std::cout << "The sum of the digits in " << number << "! is: " << result << std::endl;
    return 0;
}
